/******/ (() => { // webpackBootstrap
var __webpack_exports__ = {};
/*!***********************!*\
  !*** ./src/script.ts ***!
  \***********************/
var timeRange = 2;
var showLiveTweet = true;
var listIDs = [
    "1265268852528566273",
    "1265268943393943554",
    "1265269023278690304",
    "1265269077888479235",
    "1265269135493099526",
    "1265269191877124101",
    "1265269251641761793",
    "1265269317169340417",
];
var iconPaths = [
    "icon/red.svg",
    "icon/orange.svg",
    "icon/yellow.svg",
    "icon/blue.svg",
    "icon/cyan.svg",
    "icon/green.svg",
    "icon/brown.svg",
    "icon/gray.svg",
];
var colors = [
    " Red",
    " Orange",
    " Yellow",
    " Blue",
    " Cyan",
    " Green",
    " Brown",
    " Gray",
];
var contestFinishTime = new Date(document.getElementsByTagName("time")[1].textContent);
var searchRangeStart = function () {
    var searchRangeStart = contestFinishTime;
    var startDate = searchRangeStart.toLocaleDateString("jp-JP", {
        year: "numeric",
        month: "2-digit",
        day: "2-digit",
    });
    var startYear = startDate.slice(0, 4);
    var startMonth = startDate.slice(5, 7);
    var startDay = startDate.slice(8, 10);
    var startTime = searchRangeStart
        .toLocaleTimeString("jp-JP")
        .replace(":", "%3A");
    return "%20since%3A".concat(startYear, "-").concat(startMonth, "-").concat(startDay, "_").concat(startTime, "_JST");
};
var searchRangeEnd = function () {
    var searchRangeEnd = contestFinishTime;
    searchRangeEnd.setHours(searchRangeEnd.getHours() + timeRange);
    var endDate = searchRangeEnd.toLocaleDateString("jp-JP", {
        year: "numeric",
        month: "2-digit",
        day: "2-digit",
    });
    var endTime = searchRangeEnd
        .toLocaleTimeString("jp-JP")
        .replace(":", "%3A");
    var endYear = endDate.slice(0, 4);
    var endMonth = endDate.slice(5, 7);
    var endDay = endDate.slice(8, 10);
    return "%20until%3A".concat(endYear, "-").concat(endMonth, "-").concat(endDay, "_").concat(endTime, "_JST");
};
// Generate URLs to AtCoder TL
var generateURLs = function () {
    var queryString = searchRangeStart() +
        searchRangeEnd() +
        "&typed_query" +
        (showLiveTweet ? "&f=live" : "");
    var listURLs = listIDs.map(function (listID) {
        return "https://twitter.com/search?q=list%3A".concat(listID).concat(queryString);
    });
    return listURLs;
};
var generateLinkElements = function () {
    var links = document.createElement("li");
    var listURLs = generateURLs();
    for (var i = 0; i < 8; ++i) {
        var link = document.createElement("a");
        link.href = listURLs[i];
        var colorIcon = document.createElement("img");
        colorIcon.src = chrome.runtime.getURL(iconPaths[i]);
        links.append(link);
        link.append(colorIcon);
        link.append(document.createTextNode(colors[i]));
    }
    return links;
};
// Add "AtCoderTL" Tab to the nav bar
window.addEventListener("load", function () {
    var tab = document.getElementsByClassName("nav nav-tabs");
    var linksToTL = generateLinkElements();
    var menu = document.createElement("ul");
    menu.className = "dropdown-menu";
    menu.append(linksToTL);
    var twitterIcon = document.createElement("img");
    twitterIcon.src = chrome.runtime.getURL("icon/twitter.svg");
    var dropDownMenu = document.createElement("a");
    var caret = document.createElement("span");
    caret.className = "caret";
    // Configure dropdown menu
    dropDownMenu.append(twitterIcon);
    dropDownMenu.append(document.createTextNode(" AtCoder TL"));
    dropDownMenu.append(caret);
    dropDownMenu.className = "dropdown-toggle";
    dropDownMenu.setAttribute("data-toggle", "dropdown");
    dropDownMenu.setAttribute("role", "button");
    dropDownMenu.setAttribute("aria-haspopup", "true");
    dropDownMenu.setAttribute("aria-expanded", "false");
    dropDownMenu.href = "#";
    var newTab = document.createElement("li");
    newTab.append(menu);
    newTab.append(dropDownMenu);
    // Insert the dropdown menu to the end of navbar
    var lastChild = tab[0].getElementsByClassName("pull-right");
    tab[0].insertBefore(newTab, lastChild[0]);
});

/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,